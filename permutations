46. Permutations
Link: https://leetcode.com/problems/permutations/
problem Level:Medium
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

Example 2:
Input: nums = [0,1]
Output: [[0,1],[1,0]]

Example 3:
Input: nums = [1]
Output: [[1]]
 

Constraints:

1 <= nums.length <= 6
-10 <= nums[i] <= 10
All the integers of nums are unique.

Solution:
Java code:
class Solution {
    List<List<Integer>> ans=new ArrayList<>();
    public List<List<Integer>> permute(int[] nums) {
        // perHelper(nums,0,new ArrayList<Integer>());
        perHelper(nums,0);
        return ans;
    }
    // Approach 2 :with optimal space complexity and for the both the approaches the time complexity is same
    // and the time complexity will be O(n!)*O(n)
    public void perHelper(int[] up,int ind){
        if(ind==up.length){
            List<Integer> res=new ArrayList<>();
            for(int ele:up)
                res.add(ele);
            ans.add(res);
            return;
        }
        for(int i=ind;i<up.length;i++){
            swap(up,ind,i);
            perHelper(up,ind+1);
            swap(up,ind,i);
        }
    }
    public void swap(int[] up,int i,int j){
        int temp=up[i];
        up[i]=up[j];
        up[j]=temp;
    }
    
    // Approach 1: this approach uses an extra space of O(n)+O(n) for every recursion total : O(n!)*(O(n)+O(n))
    // and the time complexity will be O(n!)*O(n)
    public void perHelper(int[] up,int ind,List<Integer> p){
        if(ind==up.length){
            ans.add(p);
            return;
        }
        int a=up[ind];
        for(int i=0;i<=p.size();i++){
            List<Integer> pnew=new ArrayList<>();
            for(int j=0;j<i;j++){
                pnew.add(p.get(j));
            }
            pnew.add(a);
            for(int j=i;j<p.size();j++){
                pnew.add(p.get(j));
            }
            perHelper(up,ind+1,pnew);
        }
    }
}

Solution Link:
Striver:
https://www.youtube.com/watch?v=f2ic2Rsc9pU&list=PLgUwDviBIf0rQ6cnlaHRMuOp4H_D-7hwP&index=9&t=411s
